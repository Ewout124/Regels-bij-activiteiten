/*
 * Plan SW - Toepasbare regel SW
 *
 * Nog in te voorzien
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: robert.melskens@vng.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRegeltekstenApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>RegeltekstHal</returns>
        RegeltekstHal Getregeltekst(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>ApiResponse of RegeltekstHal</returns>
        ApiResponse<RegeltekstHal> GetregeltekstWithHttpInfo(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>RegeltekstHalCollectie</returns>
        RegeltekstHalCollectie Getregelteksten(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>ApiResponse of RegeltekstHalCollectie</returns>
        ApiResponse<RegeltekstHalCollectie> GetregeltekstenWithHttpInfo(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRegeltekstenApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RegeltekstHal</returns>
        System.Threading.Tasks.Task<RegeltekstHal> GetregeltekstAsync(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RegeltekstHal)</returns>
        System.Threading.Tasks.Task<ApiResponse<RegeltekstHal>> GetregeltekstWithHttpInfoAsync(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RegeltekstHalCollectie</returns>
        System.Threading.Tasks.Task<RegeltekstHalCollectie> GetregeltekstenAsync(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RegeltekstHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<RegeltekstHalCollectie>> GetregeltekstenWithHttpInfoAsync(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRegeltekstenApi : IRegeltekstenApiSync, IRegeltekstenApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class RegeltekstenApi : IRegeltekstenApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="RegeltekstenApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RegeltekstenApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RegeltekstenApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RegeltekstenApi(String basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RegeltekstenApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public RegeltekstenApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RegeltekstenApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public RegeltekstenApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>RegeltekstHal</returns>
        public RegeltekstHal Getregeltekst(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?))
        {
            Org.OpenAPITools.Client.ApiResponse<RegeltekstHal> localVarResponse = GetregeltekstWithHttpInfo(identificatie, expand, inclusiefvervallen, vanafdatum);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>ApiResponse of RegeltekstHal</returns>
        public Org.OpenAPITools.Client.ApiResponse<RegeltekstHal> GetregeltekstWithHttpInfo(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?))
        {
            // verify the required parameter 'identificatie' is set
            if (identificatie == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'identificatie' when calling RegeltekstenApi->Getregeltekst");

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("identificatie", Org.OpenAPITools.Client.ClientUtils.ParameterToString(identificatie)); // path parameter
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (inclusiefvervallen != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "inclusiefvervallen", inclusiefvervallen));
            }
            if (vanafdatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "vanafdatum", vanafdatum));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<RegeltekstHal>("/regelteksten/{identificatie}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getregeltekst", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RegeltekstHal</returns>
        public async System.Threading.Tasks.Task<RegeltekstHal> GetregeltekstAsync(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<RegeltekstHal> localVarResponse = await GetregeltekstWithHttpInfoAsync(identificatie, expand, inclusiefvervallen, vanafdatum, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatie">&lt;body&gt;&lt;p&gt;De unieke identificatie waaronder elk object van dit type bekend is.&lt;/p&gt;&lt;/body&gt;</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RegeltekstHal)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<RegeltekstHal>> GetregeltekstWithHttpInfoAsync(string identificatie, string expand = default(string), bool? inclusiefvervallen = default(bool?), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'identificatie' is set
            if (identificatie == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'identificatie' when calling RegeltekstenApi->Getregeltekst");


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };


            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("identificatie", Org.OpenAPITools.Client.ClientUtils.ParameterToString(identificatie)); // path parameter
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (inclusiefvervallen != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "inclusiefvervallen", inclusiefvervallen));
            }
            if (vanafdatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "vanafdatum", vanafdatum));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<RegeltekstHal>("/regelteksten/{identificatie}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getregeltekst", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>RegeltekstHalCollectie</returns>
        public RegeltekstHalCollectie Getregelteksten(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?))
        {
            Org.OpenAPITools.Client.ApiResponse<RegeltekstHalCollectie> localVarResponse = GetregeltekstenWithHttpInfo(page, expand, begindatum, codebevoegdgezag, documentidentificatie, documentopschrift, einddatum, gerelateerderegeltekstidentificaties, inclusiefvervallen, koplabel, kopnummer, kopopschrift, laatstewijzigingsdatum, locatieidentificaties, omschrijving, vanafdatum);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <returns>ApiResponse of RegeltekstHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse<RegeltekstHalCollectie> GetregeltekstenWithHttpInfo(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?))
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (page != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page", page));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (begindatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "begindatum", begindatum));
            }
            if (codebevoegdgezag != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "codebevoegdgezag", codebevoegdgezag));
            }
            if (documentidentificatie != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentidentificatie", documentidentificatie));
            }
            if (documentopschrift != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentopschrift", documentopschrift));
            }
            if (einddatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "einddatum", einddatum));
            }
            if (gerelateerderegeltekstidentificaties != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "gerelateerderegeltekstidentificaties", gerelateerderegeltekstidentificaties));
            }
            if (inclusiefvervallen != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "inclusiefvervallen", inclusiefvervallen));
            }
            if (koplabel != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "koplabel", koplabel));
            }
            if (kopnummer != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "kopnummer", kopnummer));
            }
            if (kopopschrift != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "kopopschrift", kopopschrift));
            }
            if (laatstewijzigingsdatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "laatstewijzigingsdatum", laatstewijzigingsdatum));
            }
            if (locatieidentificaties != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locatieidentificaties", locatieidentificaties));
            }
            if (omschrijving != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "omschrijving", omschrijving));
            }
            if (vanafdatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "vanafdatum", vanafdatum));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<RegeltekstHalCollectie>("/regelteksten", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getregelteksten", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RegeltekstHalCollectie</returns>
        public async System.Threading.Tasks.Task<RegeltekstHalCollectie> GetregeltekstenAsync(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<RegeltekstHalCollectie> localVarResponse = await GetregeltekstenWithHttpInfoAsync(page, expand, begindatum, codebevoegdgezag, documentidentificatie, documentopschrift, einddatum, gerelateerderegeltekstidentificaties, inclusiefvervallen, koplabel, kopnummer, kopopschrift, laatstewijzigingsdatum, locatieidentificaties, omschrijving, vanafdatum, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="page">Een pagina binnen de gepagineerde resultatenset. (optional)</param>
        /// <param name="expand">Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature). (optional)</param>
        /// <param name="begindatum"> (optional)</param>
        /// <param name="codebevoegdgezag">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentidentificatie">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="documentopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="einddatum"> (optional)</param>
        /// <param name="gerelateerderegeltekstidentificaties"> (optional)</param>
        /// <param name="inclusiefvervallen">&lt;body&gt;&lt;p&gt;Als de parameter &#39;vanafdatum&#39; een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="koplabel">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopnummer">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="kopopschrift">&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="laatstewijzigingsdatum"> (optional)</param>
        /// <param name="locatieidentificaties"> (optional)</param>
        /// <param name="omschrijving">&lt;body&gt;&lt;p&gt;De letterlijke tekst waarmee de Regeltekst is omschreven, in een artikel of een lid. Een Regeltekst is altijd Ã©Ã©n doorlopend stuk juridische tekst, welke juridische regels bevat.&lt;/p&gt;&lt;/body&gt; (optional)</param>
        /// <param name="vanafdatum"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RegeltekstHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<RegeltekstHalCollectie>> GetregeltekstenWithHttpInfoAsync(int? page = default(int?), string expand = default(string), DateTime? begindatum = default(DateTime?), string codebevoegdgezag = default(string), string documentidentificatie = default(string), string documentopschrift = default(string), DateTime? einddatum = default(DateTime?), string gerelateerderegeltekstidentificaties = default(string), bool? inclusiefvervallen = default(bool?), string koplabel = default(string), string kopnummer = default(string), string kopopschrift = default(string), DateTime? laatstewijzigingsdatum = default(DateTime?), string locatieidentificaties = default(string), string omschrijving = default(string), DateTime? vanafdatum = default(DateTime?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };


            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (page != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page", page));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "expand", expand));
            }
            if (begindatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "begindatum", begindatum));
            }
            if (codebevoegdgezag != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "codebevoegdgezag", codebevoegdgezag));
            }
            if (documentidentificatie != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentidentificatie", documentidentificatie));
            }
            if (documentopschrift != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentopschrift", documentopschrift));
            }
            if (einddatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "einddatum", einddatum));
            }
            if (gerelateerderegeltekstidentificaties != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "gerelateerderegeltekstidentificaties", gerelateerderegeltekstidentificaties));
            }
            if (inclusiefvervallen != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "inclusiefvervallen", inclusiefvervallen));
            }
            if (koplabel != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "koplabel", koplabel));
            }
            if (kopnummer != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "kopnummer", kopnummer));
            }
            if (kopopschrift != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "kopopschrift", kopopschrift));
            }
            if (laatstewijzigingsdatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "laatstewijzigingsdatum", laatstewijzigingsdatum));
            }
            if (locatieidentificaties != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locatieidentificaties", locatieidentificaties));
            }
            if (omschrijving != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "omschrijving", omschrijving));
            }
            if (vanafdatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "vanafdatum", vanafdatum));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<RegeltekstHalCollectie>("/regelteksten", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getregelteksten", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
