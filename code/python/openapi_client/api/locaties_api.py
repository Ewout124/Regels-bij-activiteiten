"""
    Plan SW - Toepasbare regel SW

    Nog in te voorzien  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: robert.melskens@vng.nl
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.bad_request_foutbericht import BadRequestFoutbericht
from openapi_client.model.foutbericht import Foutbericht
from openapi_client.model.geometrie_type import GeometrieType
from openapi_client.model.locatie_hal import LocatieHal
from openapi_client.model.locatie_hal_collectie import LocatieHalCollectie
from openapi_client.model.locatie_type import LocatieType


class LocatiesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __getlocatie(
            self,
            identificatie,
            **kwargs
        ):
            """getlocatie  # noqa: E501

            <body><p>Het bericht dat de JSON/REST API voor het ophalen van gegevens van een amendement retourneert.</p></body>  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.getlocatie(identificatie, async_req=True)
            >>> result = thread.get()

            Args:
                identificatie (str): <body><p>De unieke identificatie waaronder elk object van dit type bekend is.</p></body><body><p>Een inhoudelijke toelichting op de toepassing van het informatie-element.</p></body><body><p>De verzameling van waarden die gegevens van dit attribuutsoort kunnen hebben, dat wil zeggen het waardenbereik, uitgedrukt in een specifieke structuur.</p></body>

            Keyword Args:
                inclusiefvervallen (bool): <body><p>Als de parameter 'vanafdatum' een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.</p></body>. [optional]
                vanafdatum (date): [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                LocatieHal
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['identificatie'] = \
                identificatie
            return self.call_with_http_info(**kwargs)

        self.getlocatie = _Endpoint(
            settings={
                'response_type': (LocatieHal,),
                'auth': [],
                'endpoint_path': '/locaties/{identificatie}',
                'operation_id': 'getlocatie',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identificatie',
                    'inclusiefvervallen',
                    'vanafdatum',
                ],
                'required': [
                    'identificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'identificatie':
                        (str,),
                    'inclusiefvervallen':
                        (bool,),
                    'vanafdatum':
                        (date,),
                },
                'attribute_map': {
                    'identificatie': 'identificatie',
                    'inclusiefvervallen': 'inclusiefvervallen',
                    'vanafdatum': 'vanafdatum',
                },
                'location_map': {
                    'identificatie': 'path',
                    'inclusiefvervallen': 'query',
                    'vanafdatum': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__getlocatie
        )

        def __getlocaties(
            self,
            **kwargs
        ):
            """getlocaties  # noqa: E501

            <body><p>Het bericht dat de JSON/REST API voor het ophalen van een collectie amendementen retourneert.</p></body>  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.getlocaties(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                page (int): Een pagina binnen de gepagineerde resultatenset.. [optional]
                begindatum (date): [optional]
                einddatum (date): [optional]
                geometrie (str): <body><p>De geometrische bepaling van de lijn door middel van coördinaten.</p></body><body><p>De geometrische bepaling van het gebied door middel van coördinaten.</p></body><body><p>De geometrische bepaling van de punt door middel van coÃ¶rdinaten.</p></body><body><p>Een inhoudelijke toelichting op de toepassing van het informatie-element.</p></body>. [optional]
                geometriebron (str): <body><p>De bron die is gebruikt voor, dan wel de wijze van inwinning van de geometrie.</p></body><body><p>De bron die is gebruikt voor, dan wel de wijze van inwinning van de geometrie.</p></body><body><p>De bron die is gebruikt voor, dan wel de wijze van inwinning van de geometrie.</p></body><body><p>Een inhoudelijke toelichting op de toepassing van het informatie-element.</p></body>. [optional]
                geometrietype (GeometrieType): [optional]
                inclusiefvervallen (bool): <body><p>Als de parameter 'vanafdatum' een waarde heeft dan moet een evt. waarde van dit attribute worden genegeerd.</p></body>. [optional]
                noemer (str): <body><p>Tekstuele beschrijving van een Locatie, zodat er als zodanig over deze locatie gesproken kan worden. De beschrijving kan een bepaalde naam zijn waaronder de Locatie bekend staat, maar (lang) niet elke Locatie heef een naam.</p></body><body><p>Bijvoorbeeld het hele werkingsgebied van bevoegd gezag, zoals 'Het Koninkrijk der Nederlanden' of gemeente 'Amersfoort'. Bijvoorbeeld een natuurgebied zoals de 'Veluwe' of de rivier de 'Rijn' of het centrum van een woonplaats 'centrum Apeldoorn'.</p></body>. [optional]
                omvattendelocatieidentificaties (str): [optional]
                type (LocatieType): [optional]
                vanafdatum (date): [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                LocatieHalCollectie
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.getlocaties = _Endpoint(
            settings={
                'response_type': (LocatieHalCollectie,),
                'auth': [],
                'endpoint_path': '/locaties',
                'operation_id': 'getlocaties',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'page',
                    'begindatum',
                    'einddatum',
                    'geometrie',
                    'geometriebron',
                    'geometrietype',
                    'inclusiefvervallen',
                    'noemer',
                    'omvattendelocatieidentificaties',
                    'type',
                    'vanafdatum',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'page',
                ]
            },
            root_map={
                'validations': {
                    ('page',): {

                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'page':
                        (int,),
                    'begindatum':
                        (date,),
                    'einddatum':
                        (date,),
                    'geometrie':
                        (str,),
                    'geometriebron':
                        (str,),
                    'geometrietype':
                        (GeometrieType,),
                    'inclusiefvervallen':
                        (bool,),
                    'noemer':
                        (str,),
                    'omvattendelocatieidentificaties':
                        (str,),
                    'type':
                        (LocatieType,),
                    'vanafdatum':
                        (date,),
                },
                'attribute_map': {
                    'page': 'page',
                    'begindatum': 'begindatum',
                    'einddatum': 'einddatum',
                    'geometrie': 'geometrie',
                    'geometriebron': 'geometriebron',
                    'geometrietype': 'geometrietype',
                    'inclusiefvervallen': 'inclusiefvervallen',
                    'noemer': 'noemer',
                    'omvattendelocatieidentificaties': 'omvattendelocatieidentificaties',
                    'type': 'type',
                    'vanafdatum': 'vanafdatum',
                },
                'location_map': {
                    'page': 'query',
                    'begindatum': 'query',
                    'einddatum': 'query',
                    'geometrie': 'query',
                    'geometriebron': 'query',
                    'geometrietype': 'query',
                    'inclusiefvervallen': 'query',
                    'noemer': 'query',
                    'omvattendelocatieidentificaties': 'query',
                    'type': 'query',
                    'vanafdatum': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__getlocaties
        )
